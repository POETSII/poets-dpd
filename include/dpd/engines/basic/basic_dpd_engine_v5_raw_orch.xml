<?xml version='1.0' encoding='ASCII'?>
<Graphs xmlns="https://poets-project.org/schemas/virtual-graph-schema-v4" formatMinorVersion="0">
  <GraphType id="basic_dpd_engine_v5">
    <Properties/>
    <SharedCode><![CDATA[
    #ifdef POETS_LEGACY_HAS_HANDLER_EXIT
        #define _do_handler_exit(code) handler_exit(code)
        #else
        #define _do_handler_exit(code) ((void)0)
        #endif

        #define fake_handler_exit(code) \
        { \
            if((code)==0){ \
                handler_log(0, "_HANDLER_EXIT_SUCCESS_9be65737_"); \
            }else{ \
                handler_log(0, "_HANDLER_EXIT_FAIL_9be65737_"); \
            } \
            _do_handler_exit(code); \
        }   

        __SHARED_CODE_C__
    ]]></SharedCode>
    <MessageTypes>
        <MessageType id="share"><Message><![CDATA[
            
            __MESSAGE_TYPE_SHARE_C__
        ]]></Message></MessageType>

        <MessageType id="migrate"><Message><![CDATA[
            __MESSAGE_TYPE_MIGRATE_C__
        ]]></Message></MessageType>

        <MessageType id="force"><Message><![CDATA[
            __MESSAGE_TYPE_FORCE_C__
        ]]></Message></MessageType>
    </MessageTypes>

    <DeviceTypes>
        <DeviceType id="reaper"> 
            <Properties><![CDATA[
            uint32_t numBeads;
            uint32_t expectedFinalTime;
            ]]></Properties>
            <State><![CDATA[
            uint32_t beadsSeen;
            uint32_t combinedHash;
            ]]></State>

            <SharedCode />

            <InputPin name="output_in" messageTypeId="migrate">
                <Properties />
                <State />
                <OnReceive><![CDATA[
                handler_log(2, "bead id %x, t=%x, x=[%x,%x,%x] (fix23.8)", message->id, message->t, (int)(256*message->x[0]), (int)(256*message->x[1]),(int)(256* message->x[2]));
                deviceState->beadsSeen++;
                deviceState->combinedHash += calc_checksum(*message);
                handler_log(2, "  beads seen=%x, total=%x", deviceState->beadsSeen, deviceProperties->numBeads);
                if(deviceState->beadsSeen==deviceProperties->numBeads){
                    handler_log(1, "Final checksum = %x", deviceState->combinedHash);
                    fake_handler_exit(0);
                }
                ]]></OnReceive>
            </InputPin>

            <ReadyToSend />
            <OnInit />
            <OnDeviceIdle />
            <OnHardwareIdle />
        </DeviceType>

        <DeviceType id="cell"> 
            <Properties />
            <State><![CDATA[
                __DEVICE_STATE_C__
            ]]></State>
            <SharedCode/>
            <InputPin name="share_in" messageTypeId="share">
                <Properties/>
                <State/>
                <OnReceive><![CDATA[
                    BasicDPDEngineV5RawHandlers::on_recv_share(*deviceState, *message);
                ]]></OnReceive>
            </InputPin>

            <InputPin name="migrate_in" messageTypeId="migrate">
                <Properties/>
                <State/>
                <OnReceive><![CDATA[
                    BasicDPDEngineV5RawHandlers::on_recv_migrate(*deviceState, *message);
                ]]></OnReceive>
            </InputPin>

            <InputPin name="force_in" messageTypeId="force">
                <Properties/>
                <State/>
                <OnReceive><![CDATA[
                    BasicDPDEngineV5RawHandlers::on_recv_force(*deviceState, *message);
                ]]></OnReceive>
            </InputPin>

            <OutputPin name="migrate_out" messageTypeId="migrate">
                <Properties/>
                <State/>
                <OnSend><![CDATA[
                    BasicDPDEngineV5RawHandlers::on_send_migrate(*deviceState, *message);
                ]]></OnSend>
            </OutputPin>

            <OutputPin name="share_out" messageTypeId="share">
                <OnSend><![CDATA[
                    BasicDPDEngineV5RawHandlers::on_send_share(*deviceState, *message);
                ]]></OnSend>
            </OutputPin>

            <OutputPin name="force_out" messageTypeId="force">
                <OnSend><![CDATA[
                    BasicDPDEngineV5RawHandlers::on_send_force(*deviceState, *message);
                ]]></OnSend>
            </OutputPin>

            <OutputPin name="output_out" messageTypeId="migrate">
                <OnSend><![CDATA[
                    BasicDPDEngineV5RawHandlers::on_send_output(*deviceState, *message);
                ]]></OnSend>
            </OutputPin>

            <ReadyToSend><![CDATA[
                *readyToSend=BasicDPDEngineV5RawHandlers::calc_rts(*deviceState);
            ]]></ReadyToSend>

            <OnInit><![CDATA[
                BasicDPDEngineV5RawHandlers::on_init(*deviceState);
            ]]></OnInit>

            <OnDeviceIdle />

            <OnHardwareIdle><![CDATA[
                BasicDPDEngineV5RawHandlers::on_barrier(*deviceState);
            ]]></OnHardwareIdle>
        </DeviceType>
    </DeviceTypes>
</GraphType>
</Graphs>